adds REMOTE_JMX flag. When this is set to "yes" proper JVM_ARGS are added for allowing to connect JMX remotely.
--- a/bin/run.sh
+++ b/bin/run.sh
@@ -8,6 +8,11 @@
 #you can use the following line if you want to run with different ports
 #export CLUSTER_PROPS="-Djnp.port=1099 -Djnp.rmiPort=1098 -Djnp.host=localhost -Dhornetq.remoting.netty.host=localhost -Dhornetq.remoting.netty.port=5445"
 export JVM_ARGS="$CLUSTER_PROPS -XX:+UseParallelGC -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Xms512M -Xmx1024M -Dhornetq.config.dir=$CONFIG_DIR -Djava.util.logging.config.file=$CONFIG_DIR/logging.properties -Djava.library.path=."
+
+if [ "x$REMOTE_JMX" = "xyes" ]; then
+    JVM_ARGS+="-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=3001 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
+fi
+
 #export JVM_ARGS="-Xmx512M -Djava.util.logging.config.file=$CONFIG_DIR/logging.properties -Dhornetq.config.dir=$CONFIG_DIR -Djava.library.path=. -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
 
 for i in `ls /usr/share/hornetq/lib/*.jar`; do
